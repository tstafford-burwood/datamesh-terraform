steps:

# PACKER PROJECT

- id: "packer project - init"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/wcm-srde/packer-project'
  args: [
    'init',
    '-backend-config=bucket=${_BUCKET}',
    '-backend-config=prefix=${_PREFIX}/packer-project'
  ]

- id: "packer project - first plan and disable project policies"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/wcm-srde/packer-project'
  args: [
    'plan',
    '-var=enforce_packer_project_disable_sa_creation=false',
  ]

- id: "packer project - first apply and disable project policies "
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/wcm-srde/packer-project'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    if ! terraform apply -auto-approve -var="enforce_packer_project_disable_sa_creation=false" ; then
      echo "Pipeline has failed, check terraform apply log output to determine error."
    fi

- id: "packer project - second plan and ensure project policies are re-enabled"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/wcm-srde/packer-project'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    terraform plan \
    -target=module.packer_project_disable_sa_creation \
    -var="enforce_packer_project_disable_sa_creation=true" \

- id: "packer project - second apply and ensure project policies are re-enabled"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/wcm-srde/packer-project'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    terraform apply -auto-approve \
    -target=module.packer_project_disable_sa_creation \
    -var="enforce_packer_project_disable_sa_creation=true"

timeout: 3600s
